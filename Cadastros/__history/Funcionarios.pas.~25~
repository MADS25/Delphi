unit Funcionarios;

  interface

  uses
    Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
    Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Data.DB,
    Vcl.Buttons, Vcl.Grids, Vcl.DBGrids;

  type
    TFrmFuncionarios = class(TForm)
      EdtBuscarNome: TEdit;
      rbNome: TRadioButton;
      rbCPF: TRadioButton;
      EdtBuscarCPF: TMaskEdit;
      lb_buscar: TLabel;
      EdtNome: TEdit;
      EdtCPF: TMaskEdit;
      EdtTelefone: TMaskEdit;
      EdtEndereco: TEdit;
      lb_nome: TLabel;
      lb_end: TLabel;
      lb_cpf: TLabel;
      lb_telefone: TLabel;
      lb_cargo: TLabel;
      cbCargo: TComboBox;
      DBGrid1: TDBGrid;
      btnNovo: TSpeedButton;
      btnSalvar: TSpeedButton;
    btnEditar: TSpeedButton;
      btnExcluir: TSpeedButton;
      procedure FormShow(Sender: TObject);
      procedure btnNovoClick(Sender: TObject);
      procedure btnSalvarClick(Sender: TObject);
      procedure DBGrid1CellClick(Column: TColumn);
      procedure btnEditarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure EdtBuscarNomeChange(Sender: TObject);
    procedure EdtBuscarCPFChange(Sender: TObject);
    procedure rbNomeClick(Sender: TObject);
    procedure rbCPFClick(Sender: TObject);
    procedure DBGrid1DblClick(Sender: TObject);
    private
      { Private declarations }

      procedure limpar;
      procedure habilitarCampos;
      procedure desabilitarCampos;
      procedure verificaCadastro;

      procedure associarCampos;
      procedure listar;

      procedure carregarCombobox;
      procedure buscarNome;
      procedure buscarCpf;

    public
      { Public declarations }
    end;

  var
    FrmFuncionarios: TFrmFuncionarios;
    id : String;
    cpfAntigo  : String;

  implementation

  {$R *.dfm}

  uses Modulo;

  procedure TFrmFuncionarios.verificaCadastro;

  begin
    //verificar se o CPF já está cadastrado
    dm.query_func.Close;
    dm.query_func.SQL.Clear;
    dm.query_func.SQL.Add('SELECT * FROM funcionarios WHERE cpf = ' + QuotedStr(Trim(EdtCPF.Text)));
    dm.query_func.Open;

  end;

  procedure TFrmFuncionarios.limpar;
  begin
    EdtNome.Text :='';
    EdtCPF.Text :='';
    EdtEndereco.Text :='';
    EdtTelefone.Text :='';
  end;

  procedure TFrmFuncionarios.habilitarCampos;
  begin
    EdtNome.Enabled := True;
    EdtCPF.Enabled := True;
    EdtEndereco.Enabled := True;
    EdtTelefone.Enabled := True;
    cbCargo.Enabled := True;
  end;

  procedure TFrmFuncionarios.desabilitarCampos;
  begin
    EdtNome.Enabled := False;
    EdtCPF.Enabled := False;
    EdtEndereco.Enabled := False;
    EdtTelefone.Enabled := False;
    cbCargo.Enabled := False;
  end;

  procedure TFrmFuncionarios.EdtBuscarCPFChange(Sender: TObject);
begin
  buscarCpf;
end;

  procedure TFrmFuncionarios.EdtBuscarNomeChange(Sender: TObject);
begin
   if EdtBuscarNome.Text <> '' then
  begin
     buscarNome;
  end
  else
  begin
   listar;
  end;
end;

  procedure TFrmFuncionarios.FormShow(Sender: TObject);
  begin
    desabilitarCampos;
    dm.tb_func.Active := True;
    listar;
    carregarCombobox;
    cbCargo.ItemIndex :=0;
    EdtBuscarCPF.Visible := False;
    rbNome.Checked := True;
  end;

  procedure TFrmFuncionarios.associarCampos;
  begin
    dm.tb_func.FieldByName('nome').Value := EdtNome.Text;
    dm.tb_func.FieldByName('cpf').Value := EdtCPF.Text;
    dm.tb_func.FieldByName('telefone').Value := EdtTelefone.Text;
    dm.tb_func.FieldByName('endereco').Value := EdtEndereco.Text;
    dm.tb_func.FieldByName('cargo').Value := cbCargo.Text;
    dm.tb_func.FieldByName('data').Value := DateToStr(Date);
  end;

  procedure TFrmFuncionarios.listar;
  begin
    dm.query_func.Close;
    dm.query_func.SQL.Clear;
    dm.query_func.SQL.Add('SELECT * FROM funcionarios order by nome asc');
    dm.query_func.Open;
  end;

  procedure TFrmFuncionarios.rbCPFClick(Sender: TObject);
begin
  listar;
  EdtBuscarCPF.Visible := True;
  EdtBuscarNome.Visible := False;
end;

  procedure TFrmFuncionarios.rbNomeClick(Sender: TObject);
begin
  listar;
  EdtBuscarCPF.Visible := False;
  EdtBuscarNome.Visible := True;
end;

  procedure TFrmFuncionarios.carregarCombobox;
  begin
    dm.query_cargos.Close;
    dm.query_cargos.Open;
    if not dm.query_cargos.IsEmpty then
    begin
      while not dm.query_cargos.Eof do
      begin
        cbCargo.Items.Add(dm.query_cargos.FieldByName('cargo').AsString);
        dm.query_cargos.Next;
      end;
    end;
  end;

  procedure TFrmFuncionarios.DBGrid1CellClick(Column: TColumn);
  begin
    habilitarCampos;

    EdtNome.Enabled := True;
    BtnEditar.Enabled := True;
    BtnExcluir.Enabled := True;

     dm.tb_func.Edit;
    if dm.query_func.FieldByName('nome').Value <> null then
    begin
     EdtNome.Text := dm.query_func.FieldByName('nome').Value;
     EdtCPF.Text := dm.query_func.FieldByName('cpf').Value;
     cbCargo.Text := dm.query_func.FieldByName('cargo').Value;
    end;

    if dm.query_func.FieldByName('telefone').Value <> null then
    begin
     EdtTelefone.Text := dm.query_func.FieldByName('telefone').Value;
    end;

    if dm.query_func.FieldByName('endereco').Value <> null then
    begin
    EdtEndereco.Text := dm.query_func.FieldByName('endereco').Value;
    end;

     id := dm.query_func.FieldByName('id').Value;
     cpfAntigo := dm.query_func.FieldByName('cpf').Value;

  end;

  procedure TFrmFuncionarios.DBGrid1DblClick(Sender: TObject);
begin
  if chamada = 'Func' then
  begin
    idFunc := dm.query_func.FieldByName('id').Value;
    nomeFunc := dm.query_func.FieldByName('nome').Value;
    cargoFunc := dm.query_func.FieldByName('cargo').Value;
    Close;
     chamada := '';
  end;
end;

  procedure TFrmFuncionarios.buscarNome;
    begin
      dm.query_func.Close;
      dm.query_func.SQL.Clear;
      dm.query_func.SQL.Add('SELECT * FROM funcionarios WHERE nome LIKE :nome order by cargo asc');
      dm.query_func.ParamByName('nome').Value := EdtBuscarNome.Text + '%';
      dm.query_func.Open;
    end;

  procedure TFrmFuncionarios.btnEditarClick(Sender: TObject);
  var
  cpf: string;
  begin
    if Trim(EdtNome.Text) = '' then
      begin
        MessageDlg('Preencha o Nome!', mtInformation, mbOKCancel, 0);
        EdtNome.SetFocus;
        exit;
      end;

       if Trim(EdtCPF.Text) = '' then
      begin
        MessageDlg('Preencha o CPF!', mtInformation, mbOKCancel, 0);
        EdtCPF.SetFocus;
        exit;
      end;

      if cpfAntigo <> EdtCPF.Text then
      begin
        verificaCadastro;
        if not dm.query_func.IsEmpty then
           begin
             cpf := dm.query_func['cpf'];
             MessageDlg('O CPF ' + cpf + ' já esta cadastrado!', mtInformation, mbOKCancel, 0);
             EdtCPF.Text := '';
             EdtCPF.SetFocus;
             Exit;
           end;
      end;

    associarCampos;

    dm.query_func.Close;
    dm.query_func.SQL.Clear;
    dm.query_func.SQL.Add('UPDATE funcionarios set nome = :nome, cpf = :cpf, endereco = :endereco, telefone = :telefone, cargo = :cargo WHERE id = :id');
    dm.query_func.ParamByName('nome').Value := EdtNome.Text;
    dm.query_func.ParamByName('cpf').Value := EdtCPF.Text;
    dm.query_func.ParamByName('endereco').Value := EdtEndereco.Text;
    dm.query_func.ParamByName('telefone').Value := EdtTelefone.Text;
    dm.query_func.ParamByName('cargo').Value := cbCargo.Text;
    dm.query_func.ParamByName('id').Value := id;
    dm.query_func.ExecSQL;


    //Editar o Cargo do usuário
    dm.query_usuarios.Close;
    dm.query_usuarios.SQL.Clear;
    dm.query_usuarios.SQL.Add('UPDATE usuarios set cargo = :cargo  WHERE id_funcionario = :id');
    dm.query_usuarios.ParamByName('cargo').Value := cbCargo.Text;
    dm.query_usuarios.ParamByName('id').Value := id;
    dm.query_usuarios.ExecSQL;



    listar;
    MessageDlg('Editado com sucesso!!', mtInformation, mbOKCancel, 0);
    btnEditar.Enabled := False;
    btnExcluir.Enabled := False;
    limpar;
    desabilitarCampos;





  end;

  procedure TFrmFuncionarios.btnExcluirClick(Sender: TObject);
begin
   if MessageDlg('Deseja Excluir o registro?', mtConfirmation,[mbYes,mbNo],0) = mrYes then
  begin
     associarCampos;
    dm.tb_func.Delete;
    MessageDlg('Deletado com Sucesso!', mtInformation, mbOKCancel,0);
      btnEditar.Enabled := False;
    btnExcluir.Enabled := False;
    limpar;
    desabilitarCampos;
  end;


  //Deletar tbm o usuario associado a ele
   dm.query_usuarios.Close;
   dm.query_usuarios.SQL.Clear;
   dm.query_usuarios.SQL.Add('DELETE FROM usuarios WHERE id_funcionario = :id');
   dm.query_usuarios.ParamByName('id').Value := id;
   dm.query_usuarios.Execute;

   listar;
end;

  procedure TFrmFuncionarios.btnNovoClick(Sender: TObject);
  begin
   habilitarCampos;
   dm.tb_func.Insert;
   btnSalvar.Enabled := True;

  end;

  procedure TFrmFuncionarios.btnSalvarClick(Sender: TObject);
  var
  cpf: string;
  begin
    if Trim(EdtNome.Text) = '' then
      begin
        MessageDlg('Preencha o Nome!', mtInformation, mbOKCancel, 0);
        EdtNome.SetFocus;
        exit;
      end;

       if Trim(EdtCPF.Text) = '' then
      begin
        MessageDlg('Preencha o CPF!', mtInformation, mbOKCancel, 0);
        EdtCPF.SetFocus;
        exit;
      end;

    verificaCadastro;

      if not dm.query_func.IsEmpty then
     begin
       cpf := dm.query_func['cpf'];
       MessageDlg('O CPF ' + cpf + ' já esta cadastrado!', mtInformation, mbOKCancel, 0);
       EdtCPF.Text := '';
       EdtCPF.SetFocus;
       Exit;
     end;

    associarCampos;
    dm.tb_func.Post;
    MessageDlg('Salvo com Sucesso!', mtInformation, mbOKCancel,0);
    limpar;
    desabilitarCampos;
    btnSalvar.Enabled := false;
    listar;
  end;

  procedure TFrmFuncionarios.buscarCpf;
  begin
    dm.query_func.Close;
    dm.query_func.SQL.Clear;
    dm.query_func.SQL.Add('SELECT * FROM funcionarios WHERE cpf = :cpf order by cargo asc');
    dm.query_func.ParamByName('cpf').Value := EdtBuscarCPF.Text ;
    dm.query_func.Open;
  end;

end.
