unit EntradasProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.ComCtrls, Vcl.StdCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.Buttons;

type
  TFrmEntradaProdutos = class(TForm)
    btnNovo: TSpeedButton;
    btnSalvar: TSpeedButton;
    btnExcluir: TSpeedButton;
    lb_nome: TLabel;
    lb_buscar: TLabel;
    btnBuscarPro: TSpeedButton;
    Label1: TLabel;
    DBGrid1: TDBGrid;
    EdtProduto: TEdit;
    EdtQuantidade: TEdit;
    Label2: TLabel;
    EdtValor: TEdit;
    Label3: TLabel;
    btnBuscarForn: TSpeedButton;
    EdtFornecedores: TEdit;
    dataBuscar: TDateTimePicker;
    LblTotal: TLabel;
    procedure FormShow(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnBuscarProClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure btnBuscarFornClick(Sender: TObject);
    procedure EdtQuantidadeChange(Sender: TObject);
    procedure EdtValorChange(Sender: TObject);
  private
    { Private declarations }
      procedure limpar;
      procedure habilitarCampos;
      procedure desabilitarCampos;
      procedure verificaCadastro;
      procedure associarCampos;
      procedure listar;
      procedure buscarData;
  public
    { Public declarations }
  end;

var
  FrmEntradaProdutos: TFrmEntradaProdutos;
  total : Double;
  estoque : double;

implementation

{$R *.dfm}

uses Modulo, Produtos, Fornecedores;

procedure TFrmEntradaProdutos.FormActivate(Sender: TObject);
begin
 EdtProduto.Text := nomeProduto;
  EdtFornecedores.Text  := nomeFornecedor;
end;

procedure TFrmEntradaProdutos.FormShow(Sender: TObject);
begin
 desabilitarCampos;
 dm.tb_entrada_pro.Active := True;
 listar;
end;

procedure TFrmEntradaProdutos.limpar;
begin
   EdtValor.Text := '0';
   EdtQuantidade.Text := '1';
   EdtProduto.Text := '';
   EdtFornecedores.Text := '';
   LblTotal.Caption := '0';
   total := 0;

end;

procedure TFrmEntradaProdutos.habilitarCampos;
begin
   EdtValor.Enabled := True;
   EdtQuantidade.Enabled := True;
   btnBuscarPro.Enabled := True;
   btnBuscarForn.Enabled := True;
end;

procedure TFrmEntradaProdutos.desabilitarCampos;
begin
   EdtValor.Enabled := False;
   EdtQuantidade.Enabled := False;
   btnBuscarPro.Enabled := False;
   btnBuscarForn.Enabled := False;
end;

procedure TFrmEntradaProdutos.EdtQuantidadeChange(Sender: TObject);

begin
  total := strToFloat(EdtQuantidade.Text) * strToFloat(EdtValor.Text);
  LblTotal.Caption := FloatToStr(total);
end;

procedure TFrmEntradaProdutos.EdtValorChange(Sender: TObject);
begin
  total := strToFloat(EdtQuantidade.Text) * strToFloat(EdtValor.Text);
  LblTotal.Caption := FloatToStr(total);
end;

procedure TFrmEntradaProdutos.verificaCadastro;
begin

end;

procedure TFrmEntradaProdutos.associarCampos;
begin
    dm.tb_entrada_pro.FieldByName('produto').Value := EdtProduto.Text;
    dm.tb_entrada_pro.FieldByName('quantidade').Value := EdtQuantidade.Text;
    dm.tb_entrada_pro.FieldByName('fornecedor').Value := idFornecedor;
    dm.tb_entrada_pro.FieldByName('valor').Value := EdtValor.Text;
    dm.tb_entrada_pro.FieldByName('total').Value := total;
    dm.tb_entrada_pro.FieldByName('data').Value := DateToStr(Date);
end;

procedure TFrmEntradaProdutos.listar;
begin
    dm.query_entrada_pro.Close;
    dm.query_entrada_pro.SQL.Clear;
    dm.query_entrada_pro.SQL.Add('SELECT * FROM entrada_produtos order by data desc');
    dm.query_entrada_pro.Open;
end;

procedure TFrmEntradaProdutos.btnBuscarFornClick(Sender: TObject);
begin
  chamada := 'Forn';
  FrmFornecedores := TFrmFornecedores.Create(self);
  FrmFornecedores.Show;
end;

procedure TFrmEntradaProdutos.btnBuscarProClick(Sender: TObject);
begin
  chamada := 'Prod';
  FrmProdutos := TFrmProdutos.Create(self);
  FrmProdutos.Show;
end;

procedure TFrmEntradaProdutos.btnNovoClick(Sender: TObject);
begin
   habilitarCampos;
   dm.tb_entrada_pro.Insert;
   btnSalvar.Enabled := True;
   limpar;
end;

procedure TFrmEntradaProdutos.btnSalvarClick(Sender: TObject);
begin
  if Trim(EdtProduto.Text) = '' then
      begin
        MessageDlg('Preencha um Produto!', mtInformation, mbOKCancel, 0);
        exit;
      end;

      if Trim(EdtFornecedores.Text) = '' then
      begin
        MessageDlg('Preencha um Fornecedor!', mtInformation, mbOKCancel, 0);
        exit;
      end;

      if Trim(EdtValor.Text) = '0' then
      begin
        MessageDlg('Insira um Valor!', mtInformation, mbOKCancel, 0);
         EdtValor.SetFocus;
        exit;
      end;


    associarCampos;
    dm.tb_entrada_pro.Post;

    //Atualizar o Estoque

     estoque := estoqueProduto + strToFloat(edtQuantidade.Text);

     dm.query_produtos.Close;
     dm.query_produtos.SQL.Clear;
     dm.query_produtos.SQL.Add('UPDATE produtos set estoque = :estoque where id = :id');
     dm.query_produtos.ParamByName('estoque').Value := estoque;
     dm.query_produtos.ParamByName('id').Value := idProduto;
     dm.query_produtos.ExecSQL;


    MessageDlg('Salvo com Sucesso!', mtInformation, mbOKCancel,0);
    limpar;
    btnSalvar.Enabled := false;
    desabilitarCampos;
    listar;




end;

procedure TFrmEntradaProdutos.buscarData;
begin

end;

end.
